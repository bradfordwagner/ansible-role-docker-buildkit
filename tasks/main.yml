---
# tasks file for docker-buildkit

- name: check for {{ bk_install_dir }}
  become: yes
  stat:
    path: '{{ bk_install_dir }}'
  changed_when: False
  register: install_dir
- when: not install_dir.stat.exists
  block:
    # create bk_install_dir
    - name: mkdir {{ bk_install_dir }}
      file: 
        path: '{{ item }}'
        state: directory
        mode: 0755
      loop: 
        - '{{ bk_install_dir }}'
        - '{{ bk_link_dir }}'
    - name: fetch sbom from {{ bk_sbom_url }}
      uri: 
        url: '{{ bk_sbom_url }}'
        method: GET
        return_content: yes
        status_code: 200
        body_format: json
        timeout: '{{ bk_timeout_seconds }}'
        validate_certs: '{{ bk_secure }}'
      register: sbom_res
    - set_fact:
        sbom: '{{ sbom_res.content | from_json }}'
    - set_fact:
        checksum: 'sha256:{{ sbom.subject[0].digest.sha256 }}'
    - name: download {{ bk_url }}/{{ bk_tar }} -> {{ bk_install_dir }}/{{ bk_tar }}
      get_url:
        url: '{{ bk_url }}/{{ bk_tar }}'
        dest: '{{ bk_archive }}'
        checksum: '{{ checksum }}'
        timeout: '{{ bk_timeout_seconds }}'
        mode: 0644
        validate_certs: '{{ bk_secure }}'
    - name: unarchive {{ bk_archive }}
      unarchive:
        remote_src: yes
        src: '{{ bk_archive }}'
        dest: '{{ bk_install_dir }}'
        creates: '{{ bk_install_dir }}/bin'
    - name: link files
      loop: "{{ lookup('fileglob', '{{ bk_install_dir}}/bin/*', wantlist=True) }}"
      file:
        src: '{{ item }}'
        dest: '{{ bk_link_dir }}{{ item | basename }}'
        state: link
  always:
    - name: cleanup {{ bk_archive }}
      file:
        path: '{{ bk_archive }}'
        state: absent
